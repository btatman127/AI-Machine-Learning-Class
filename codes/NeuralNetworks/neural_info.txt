For example, if you run it as the following...

experiment((2, 2, 1),
           [[0, 0], [0, 1], [1, 0], [1, 1]],
           [[0], [1], [1], [0]])
you are training a network with two inputs, two hidden units, and one output on the classic XOR problem. The output might look like this:

Before training:
[0, 0] -> [0.5029849688633979]
[0, 1] -> [0.5032886301654518]
[1, 0] -> [0.5034411613226247]
[1, 1] -> [0.5037442195609219]
Training...
After training:
[0, 0] -> [0.01087756030966525]
[0, 1] -> [0.9885905127593018]
[1, 0] -> [0.988592864310219]
[1, 1] -> [0.014061246808186934]

experiment((2, 2, 1),
           [[0, 0], [0, 1], [1, 0], [1, 1]],
           [[0], [1], [1], [1]])
you are training a network with two inputs, three hidden units, and one output on the OR problem. The output might look like this:
Before training:
[0, 0] -> [0.5046703801553554]
[0, 1] -> [0.5048375140495832]
[1, 0] -> [0.5045824807390835]
[1, 1] -> [0.5047497356380568]
Training...
After training:
[0, 0] -> [0.010619741507460149]
[0, 1] -> [0.9944942833207951]
[1, 0] -> [0.9944910104367288]
[1, 1] -> [0.9995298123222658]

experiment((3, 10, 2),
           [[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1]],
           [[0, 0], [0, 1], [0, 1], [1, 0], [0, 1], [1, 0], [1, 0], [1, 1]])
Here's a more complicated problem given three inputs and ten hidden units. The first output indicates whether at least two inputs are on. The second output indicates whether an odd number of inputs are on.

Before training:
[0, 0, 0] -> [0.48686323181574576, 0.459528820810853]
[0, 0, 1] -> [0.4860380335140693, 0.45957974267495244]
[0, 1, 0] -> [0.4862845790503335, 0.4592343858562806]
[0, 1, 1] -> [0.4854620178509439, 0.45928567164978906]
[1, 0, 0] -> [0.4864542580801006, 0.4581975189205594]
[1, 0, 1] -> [0.48562936200254003, 0.458249278358981]
[1, 1, 0] -> [0.48587549808698943, 0.45790293581452685]
[1, 1, 1] -> [0.48505271281642603, 0.4579550040296144]
Training...
After training:
[0, 0, 0] -> [5.192639305148142e-06, 0.009438941066859805]
[0, 0, 1] -> [0.004240896304127239, 0.9915434134589711]
[0, 1, 0] -> [0.004124662349360806, 0.9913493198316747]
[0, 1, 1] -> [0.9953847929472297, 0.009759604353725857]
[1, 0, 0] -> [0.004155631022139605, 0.9914676573925766]
[1, 0, 1] -> [0.995003520885536, 0.009579535110106981]
[1, 1, 0] -> [0.995147401329774, 0.009674861515105665]
[1, 1, 1] -> [0.999924643077542, 0.9871860649610166]